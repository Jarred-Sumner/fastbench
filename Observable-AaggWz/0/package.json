{
  "name": "@fastbench/Observable-AaggWz",
  "version": "0.0.0",
  "url": "https://fastbench.dev/Observable-AaggWz/0",
  "fastbench": {
    "snippets": [
      {
        "id": "0.a2fa9e8ea49d5",
        "code": "const subject = new rxjs.BehaviorSubject(0)\n\nconst pipedSubject = subject.pipe(\n  rxjs.filter(a => a % 2 === 0),\n  rxjs.map(b => ({value: b})),\n);\n\npipedSubject.subscribe((value) => {\n  // value\n});\n\n// Trigger value changes\nfor (const i of [0, 1, 2, 3, 4]) {\n  subject.next(i);\n}\n\nsubject.complete();\n",
        "name": "Observable",
        "type": 1
      },
      {
        "id": "0.ac541caca6229",
        "code": "const iterative = new dxjs.Iterative()\n\nconst pipedIterative = iterative.pipe(\n  dxjs.filter(a => a % 2 === 0),\n  dxjs.map(b => ({value: b})),\n);\n\n(async () => {\n  for await (const value of pipedIterative) {\n    // value\n  }\n})();\n\n// Trigger value changes\nfor (const i of [0, 1, 2, 3, 4]) {\n  iterative.next(i);\n}\n\niterative.complete();\n",
        "name": "Iterative",
        "type": 1
      }
    ],
    "shared": {
      "id": "0.1d170ff247108",
      "code": "import iterOps from \"https://cdn.skypack.dev/iter-ops@0.7.0\";\nimport * as rxjs from \"https://cdn.skypack.dev/rxjs@7.3.0\";\nimport * as dxjs from \"https://cdn.skypack.dev/dxjs@0.0.2\";\n",
      "name": "shared",
      "type": 0
    },
    "name": "Observable",
    "id": "AaggWz",
    "version": 0,
    "workerType": 1,
    "transform": 0
  },
  "files": [
    "Observable.js",
    "Iterative.js"
  ]
}